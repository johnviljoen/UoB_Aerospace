%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- AENG21200 Structures and Materials 2 - Open Section Solver             ---%
%--- Department of Aerospace Engineering                                    ---%
%--- University of Bristol (2018)                                           ---%
%------------------------------------------------------------------------------%
%--- 19/11/2018 23:16, Luiz Kawashita, v1.0                                 ---%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

clear global

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Initialisation -----------------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

[inputfile,path] = uigetfile('*.xlsx','AENG21200 - Open Section Solver - Choose input file');
if inputfile == 0
  clear;
  return;
end
%..............................................................................%
inputdata = xlsread([path inputfile]);
np = length(inputdata);
%..............................................................................%
Xi = inputdata(:,1);
Yi = inputdata(:,2);
ti = inputdata(:,3);
ni = inputdata(:,4);
%..............................................................................%
dx = zeros(np,1);
dy = zeros(np,1);
ds = zeros(np,1);
dA = zeros(np,1);
qs = zeros(np,1);
 s = zeros(np,1);

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Area and first moments of area -------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

  A = 0.;
Qxx = 0.;
Qyy = 0.;

 Xs = Xi;
 Ys = Yi;
  t = ti;

for i=2:np
  dx(i) =  Xi(i)-Xi(i-1);
  dy(i) =  Yi(i)-Yi(i-1);

  Xs(i) = (Xi(i)+Xi(i-1))*0.5;      % centroid of ds
  Ys(i) = (Yi(i)+Yi(i-1))*0.5;      % centroid of ds
   t(i) = (ti(i)+ti(i-1))*0.5;      % average thickness within ds

  ds(i) =  sqrt(dx(i)^2+dy(i)^2);   % length ds
  dA(i) =  ds(i) * t(i);            % area increment

   s(i) =  s(i-1) + ds(i);          % total arc length
      
      A =  A + dA(i);               % total area

    Qxx =  Qxx + dA(i)*Ys(i)*ni(i); % first moment of area, accounting for composite sections
    Qyy =  Qyy + dA(i)*Xs(i)*ni(i); % first moment of area, accounting for composite sections
end
  
dx(1) = dx(2);                      % cover initial zeroes
dy(1) = dy(2);
ds(1) = ds(2);
dA(1) = dA(2);

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Centroid & local coordinates (x,y) ---------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

c_X = Qyy / A;
c_Y = Qxx / A;

x = Xs - c_X;
y = Ys - c_Y;

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Second moments of area ---------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

Ixx = 0.;
Iyy = 0.;
Ixy = 0.;

for i=1:np
  Ixx = Ixx + y(i)*y(i) * dA(i) * ni(i);
  Iyy = Iyy + x(i)*x(i) * dA(i) * ni(i);
  Ixy = Ixy + x(i)*y(i) * dA(i) * ni(i);
end

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Polar second moment of area ----------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

J = 0.;

for i=1:np
  J = J + t(i)^3 * ds(i) * ni(i);
end

J = J/3;

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Trigonometric quantities -------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

f = atan2(dy,dx);   % local angle phi
cosf = cos(f);      % cos(phi)
sinf = sin(f);      % sin(phi)

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Shear centre e_X ---------------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

Sx = 0.;
Sy = 1.;           % loading along y

C = (Sx*Ixx + Sy*Ixy)/(Ixy*Ixy - Ixx*Iyy);
D = (Sy*Iyy + Sx*Ixy)/(Ixx*Iyy - Ixy*Ixy);

 M = 0.;
qs = 0.;

for i=1:np
  qs = qs - ...   % shear flow
    ( C * x(i)*t(i)*ds(i) + D * y(i)*t(i)*ds(i) );

   M = M  + ...   % moment about centroid
     qs * ( x(i)*sinf(i) - y(i)*cosf(i) ) * ds(i) * ni(i);
end

e_X = M + c_X;    % shear centre in (X,Y)

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Shear centre e_Y ---------------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

Sx = 1.;           % loading along x
Sy = 0.;

C = (Sx*Ixx + Sy*Ixy)/(Ixy*Ixy - Ixx*Iyy);
D = (Sy*Iyy + Sx*Ixy)/(Ixx*Iyy - Ixy*Ixy);

 M = 0.;
qs = 0.;

for i=1:np
  qs = qs - ...   % shear flow
    ( C * x(i)*t(i)*ds(i) + D * y(i)*t(i)*ds(i) );
  
   M = M  + ...   % moment about centroid
     qs * ( x(i)*sinf(i) - y(i)*cosf(i) ) * ds(i) * ni(i);
end

e_Y = M + c_Y;    % shear centre in (X,Y)

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Prepare plot and output --------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

profile_x = zeros(2*np,1);    % create coordinates for 'shaded' plot
profile_y = zeros(2*np,1);

j = 0;
for i=1:np
  j = j + 1;
  profile_x(j) = Xs(i) - 0.5*t(i)*sinf(i); % through thickness 'zig-zag' for shaded plot
  profile_y(j) = Ys(i) + 0.5*t(i)*cosf(i);
  j = j + 1;
  profile_x(j) = Xs(i) + 0.5*t(i)*sinf(i); % through thickness 'zig-zag' for shaded plot
  profile_y(j) = Ys(i) - 0.5*t(i)*cosf(i);
end

outarray = strsplit(inputfile,'_matlab.xlsx');
filename = char(outarray(1));
xlsfile  = [filename '_results.xlsx'];
pngfile  = [filename '_results.png'];

fig = figure('Name', 'AENG21200 - Open Section Solver - Centroid & Shear Centre' ,'NumberTitle', 'off', 'Position', [1 1 600 800], 'Resize', 'off', 'Color', 'w');

fig_plot = plot(profile_x,profile_y,'-k',c_X,c_Y,'-ro',e_X,e_Y,'-bo');

set(fig_plot(1),'LineWidth',1);
set(fig_plot(2),'LineWidth',2);
set(fig_plot(3),'LineWidth',2);

title(filename,'Interpreter','none')
xlabel('X [mm]')
ylabel('Y [mm]')

axis tight
axis equal

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Print PNG image ----------------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

print(pngfile,'-dpng');

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%--- Write XLSX file ----------------------------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

xlswrite(xlsfile,{ ...
  'Name'; ...
  'Area [mm^2]'; ...
  'Centroid X [mm]'; ...
  'Centroid Y [mm]'; ...
  'Ixx [mm^4]'; ...
  'Iyy [mm^4]'; ...
  'Ixy [mm^4]'; ...
  'J [mm^4]'; ...
  'Shear centre X [mm]'; ...
  'Shear centre Y [mm]'},1,'A1');

xlswrite(xlsfile,{ ...
  filename; ...
  num2str( A,   '%0.2f'); ...
  num2str( c_X, '%0.2f'); ...
  num2str( c_Y, '%0.2f'); ...
  num2str( Ixx, '%0.2f'); ...
  num2str( Iyy, '%0.2f'); ...
  num2str( Ixy, '%0.2f'); ...
  num2str( J,   '%0.2f'); ...
  num2str( e_X, '%0.2f'); ...
  num2str( e_Y, '%0.2f')},1,'B1');

%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%
%----------------------------End of file --------------------------------------%
%------------------------------------------------------------------------------%
%------------------------------------------------------------------------------%

